window.CREATE = top.CREATE = ELEMENT => top.document.createElement(ELEMENT);
window.ID = top.ID = ID => top.document.getElementById(ID);
window.QUERY = top.QUERY = SELECTOR => top.document.querySelector(SELECTOR);
window.QUERYALL = top.QUERYALL = ALL => top.document.querySelectorAll(ALL);
window.CLASSNAME = top.CLASSNAME = CLASS => top.document.getElementsByClassName(CLASS);

window.DECODE = top.DECODE = TXT => new TextDecoder().decode(TXT);
window.ENCODE = top.ENCODE = TXT => new TextEncoder().encode(TXT);
window.BYTE16 = top.BYTE16 = NUM => new Uint8Array(new Uint16Array([NUM]).buffer).reverse();
window.BYTE32 = top.BYTE32 = NUM => new Uint8Array(NUM ? new Uint32Array([NUM]).buffer : []).reverse();
window.SIGN16 = top.SIGN16 = NUM => new Int16Array(new Uint8Array(NUM).reverse().buffer)[0];
window.UNSIGN16 = top.UNSIGN16 = NUM => new Uint16Array([NUM])[0];
window.NUM16 = top.NUM16 = NUM => new Uint16Array(new Uint8Array(NUM).reverse().buffer)[0];
window.NUM32 = top.NUM32 = NUM => new Uint32Array(NUM ? new Uint8Array(NUM).reverse().buffer : 0)[0];
window.FLOAT = top.FLOAT = NUM => new Uint8Array(new Float32Array([NUM]).buffer).reverse();
window.UNFLOAT = top.UNFLOAT = NUM => new Float32Array(new Uint8Array(NUM.reverse()).buffer)[0];

window.GET_JSON = top.GET_JSON = TXT => {
    let POS = 0,
        left = 0,
        i = 0,
        arr = [];
    while (i++ < TXT.length) {
        if (TXT[i] == '{' && TXT[i + 1] == '"') {
            if (!left) POS = i;
            left++;
        }
        if (TXT[i] == '}') {
            if (left > 0) {
                left--;
                if (!left) arr.push(TXT.slice(POS, i + 1));
            }
        }
    }
    return arr.map(a => JSON.parse(a));
};

window.CUBES = top.CUBES = {
    BrightRed: 0,
    Red: 1,
    DarkRed: 2,
    Sand: 3,
    LightPurpleFabric: 4,
    BrightBlue: 5,
    Blue: 6,
    DarkBlue: 7,
    Caramel: 8,
    PurpleFabric: 9,
    BrightGreen: 10,
    Green: 11,
    DarkGreen: 12,
    Ceramic: 13,
    DarkPurpleFabric: 14,
    Yellow: 15,
    BrightOrange: 16,
    Orange: 17,
    Butter: 18,
    SandStone: 19,
    LightConcrete: 20,
    Concrete: 21,
    DarkConcrete: 22,
    BlackConcrete: 23,
    Khaki: 24,
    Ice: 25,
    Lava: 26,
    Bouncy: 27,
    Poison: 28,
    Parkour: 29,
    Bricks: 30,
    BrightWood: 31,
    CobleStone: 32,
    Cement: 33,
    Camouflage: 34,
    GreenPavement: 35,
    AncientCobblestone: 36,
    RedBricks: 37,
    YellowBricks: 38,
    ZigZag: 39,
    MetalPattern: 40,
    Metal: 41,
    MushRoom: 42,
    BlackIce: 43,
    PinkFabric: 44,
    RedGrid: 45,
    GreenGrid: 46,
    Circuit: 47,
    GreyBricks: 48,
    Spotty: 49,
    MetalScraps: 50,
    Slime: 51,
    Wrappingpaper: 52,
    DarkWood: 53,
    Superbouncy: 54,
    Cloud: 55,
    SoftDestructible: 56,
    MediumDestructible: 57,
    HardDestructible: 58,
    CrackedIce: 59,
    StripedCement: 60,
    Machinery: 61,
    EmbossedMetal: 62,
    Scrolling: 63,
    Kill: 64,
    Heal: 65,
    Slow: 66,
    Speed: 67,
    Crumble: 68
};
window.WEAPONS = top.WEAPONS = {
    CentralGun: 1,
    ImpulseGun: 2,
    Bazooka: 4,
    Hand: 5,
    RailGun: 6,
    Sword: 8,
    ShotGun: 9,
    FlameThrower: 10,
    CubeGun: 11,
    Revolver: 12,
    DoubleRevolvers: 13,
    Shuriken: 45,
    MultipleShuriken: 46,
    MouseGun: 60,
    GrowthGun: 62,
    SlapGun: 65,
    HealRay: 70
};
window.ACTIONS = top.ACTIONS = {
    Default: 0,
    Rail: 4,
    Sword: 5,
    Mutant: 6,
    ShotGun: 7,
    FireThrower: 8,
    Eliminate: 9,
    Fire: 10,
    Freeze: 11,
    Small: 16,
    Big: 17,
    Heal: 27,
    Kick: 0,
};
window.TEAMS = top.TEAMS = {
    Default: 0,
    Blue: 0,
    Red: 1,
    Green: 2,
    Yellow: 3,
    White: 5,
    Server: 6
};
window.EFFECTS = top.EFFECTS = {
    Default: 0,
    SpawnProtection: "_SpawnProtection",
    UnderWater: "_Underwater",
    Fire: "_Fire",
    Mutant: "_Mutant",
    Sticky: "_Sticky",
    Poison: "_Poison",
    WallJump: "_WallJump",
    NoFriction: "_NoFriction",
    Frozen: "_Frozen",
    NinjaRun: "_NinjaRun",
    HealingMat: "_HealingMat",
    TimeAttackFlagDebriefSlow: "_TimeAttackFlagDebriefSlow",
    Shielded: "_Shielded",
    Lethal: "_Lethal",
    WindFriction: "_WindFriction",
    CrumbleMat: "_CrumbleMat",
    SpeedMat: "_SpeedMat",
    SlowMat: "_SlowMat",
    Enlarged: "_Enlarged",
    Shrunken: "_Shrunken"
};
window.ANIMATIONS = top.ANIMATIONS = {
    Default: 0,
    Swim: 'Swim',
    Idle: 'Idle',
    Walk: 'Walk',
    Jump: 'Jump',
    TPose: 'TPose'
};
window.CHAT = top.CHAT = {
    Default: 7,
    Admin: 3,
    All: 7,
    Team: 8,
    Says: 9,
    Error: 11
};
window.CHEATS = top.CHEATS = {
    SET_CUBE: (CUBE) => {
        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 11, 99, 117, 114, 114, 101, 110, 116, 73, 116, 101, 109, 68, 0, 0, 0, 4, 115, 0, 4, 116, 121, 112, 101, 105, 0, 0, 0, 11, 115, 0, 9, 118, 97, 114, 105, 97, 110, 116, 73, 100, 105, 0, 0, 0, 0, 115, 0, 15, 117, 112, 100, 97, 116, 101, 73, 116, 101, 109, 83, 116, 97, 116, 101, 105, 0, 0, 0, 4, 115, 0, 8, 105, 116, 101, 109, 68, 97, 116, 97, 68, 0, 0, 0, 1, 115, 0, 8, 109, 97, 116, 101, 114, 105, 97, 108, 98, CUBE, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.PLAYERS), 70, 68, 0, 0, 0, 1, 115, 0, 11, 99, 117, 114, 114, 101, 110, 116, 73, 116, 101, 109, 68, 0, 0, 0, 4, 115, 0, 4, 116, 121, 112, 101, 105, 0, 0, 0, 11, 115, 0, 9, 118, 97, 114, 105, 97, 110, 116, 73, 100, 105, 0, 0, 0, 0, 115, 0, 15, 117, 112, 100, 97, 116, 101, 73, 116, 101, 109, 83, 116, 97, 116, 101, 105, 0, 0, 0, 4, 115, 0, 8, 105, 116, 101, 109, 68, 97, 116, 97, 68, 0, 0, 0, 1, 115, 0, 8, 109, 97, 116, 101, 114, 105, 97, 108, 98, CUBE]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_WEAPON: (WEAPON) => {
        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 11, 99, 117, 114, 114, 101, 110, 116, 73, 116, 101, 109, 68, 0, 0, 0, 3, 115, 0, 4, 116, 121, 112, 101, 105, 0, 0, 0, WEAPON, 115, 0, 9, 118, 97, 114, 105, 97, 110, 116, 73, 100, 105, 0, 0, 0, 0, 115, 0, 15, 117, 112, 100, 97, 116, 101, 73, 116, 101, 109, 83, 116, 97, 116, 101, 105, 0, 0, 0, 4, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.PLAYERS), 70, 68, 0, 0, 0, 1, 115, 0, 11, 99, 117, 114, 114, 101, 110, 116, 73, 116, 101, 109, 68, 0, 0, 0, 3, 115, 0, 4, 116, 121, 112, 101, 105, 0, 0, 0, WEAPON, 115, 0, 9, 118, 97, 114, 105, 97, 110, 116, 73, 100, 105, 0, 0, 0, 0, 115, 0, 15, 117, 112, 100, 97, 116, 101, 73, 116, 101, 109, 83, 116, 97, 116, 101, 105, 0, 0, 0, 4]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_EFFECT: (EFFECT) => {
        var ENCODE = ENCODE(EFFECT);

        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 9, 109, 111, 100, 105, 102, 105, 101, 114, 115, 68, 0, 0, 0, 1, 115, 0, ENCODE.length, ...ENCODE, 98, 0, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.PLAYERS), 70, 68, 0, 0, 0, 1, 115, 0, 9, 109, 111, 100, 105, 102, 105, 101, 114, 115, 68, 0, 0, 0, 1, 115, 0, ENCODE.length, ...ENCODE, 98, 0]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_ANIMATION: (EFFECT) => {
        var ENCODE = ENCODE(EFFECT);
        var LENGHT = 4;

        if (EFFECT == ANIMATIONS.TPose) {
            LENGHT = 5
        } else {
            LENGHT = 4
        }

        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 9, 97, 110, 105, 109, 97, 116, 105, 111, 110, 68, 0, 0, 0, 2, 115, 0, 5, 115, 116, 97, 116, 101, 115, 0, LENGHT, ...ENCODE, 115, 0, 9, 116, 105, 109, 101, 83, 116, 97, 109, 112, 105, 0, 0, 0, 1, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 9, 97, 110, 105, 109, 97, 116, 105, 111, 110, 68, 0, 0, 0, 2, 115, 0, 5, 115, 116, 97, 116, 101, 115, 0, LENGHT, ...ENCODE, 115, 0, 9, 116, 105, 109, 101, 83, 116, 97, 109, 112, 105, 0, 0, 0, 1]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_NOTIFICATION: (TYPE, NUM = 5E26 * 2) => {
        const SERVER = [243, 4, 57, 0, 3, 199, 105, 0, 0, 0, TYPE, 200, 68, 0, 0, 0, 2, 98, 4, 105, ...FLOAT(NUM), 98, 12, 115, 0, 5, 112, 116, 95, 66, 82, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 63, 0, 2, 199, 105, 0, 0, 0, TYPE, 200, 68, 0, 0, 0, 2, 98, 4, 105, ...FLOAT(NUM), 98, 12, 115, 0, 5, 112, 116, 95, 66, 82]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_TEAM: (NUM) => {
        const SERVER = [243, 4, 35, 0, 2, 89, 105, 0, 0, 0, NUM, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 29, 0, 1, 89, 105, 0, 0, 0, NUM]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))

    },
    SET_LEVEL: (NUM) => {
        var ID = 1;

        for (var i = 0; i < ID; ID++) {
            const SERVER = [243, 4, 55, 0, 2, 169, 105, ...BYTE32(NUM), 254, 105, 0, 0, 0, ID]
            const CLIENT = [243, 2, 56, 0, 1, 169, 105, ...BYTE32(NUM)]

            APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
            APP.ws.send(new Uint8Array(CLIENT))

            if (ID > 500) {
                break
            }
        }
    },
    SET_SCALE: (NUM) => {
        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 4, 115, 105, 122, 101, 102, ...FLOAT(NUM), 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 4, 115, 105, 122, 101, 102, ...FLOAT(NUM)]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_HEALTH: (NUM) => {
        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 6, 104, 101, 97, 108, 116, 104, 102, ...FLOAT(NUM), 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 6, 104, 101, 97, 108, 116, 104, 102, ...FLOAT(NUM)]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_BLUE_HEALTH: (NUM) => {
        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 6, 115, 104, 105, 101, 108, 100, 102, ...FLOAT(NUM), 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 6, 115, 104, 105, 101, 108, 100, 102, ...FLOAT(NUM)]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    SET_MAX_HEALTH: (NUM) => {
        const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 9, 109, 97, 120, 72, 101, 97, 108, 116, 104, 105, ...FLOAT(NUM), 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 9, 109, 97, 120, 72, 101, 97, 108, 116, 104, 105, ...FLOAT(NUM)]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))
    },
    OTHERS: {
        AUTO_FIRE: (TYPE) => {
            const SERVER = [243, 4, 29, 0, 3, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 8, 105, 115, 70, 105, 114, 105, 110, 103, 111, TYPE, 254, 105, 0, 0, 0, 0]
            const CLIENT = [243, 2, 25, 0, 2, 22, 105, ...BYTE32(APP.ME), 70, 68, 0, 0, 0, 1, 115, 0, 8, 105, 115, 70, 105, 114, 105, 110, 103, 111, TYPE]

            APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
            APP.ws.send(new Uint8Array(CLIENT))
        },
        RESET_TERRAIN: () => {
            const SERVER = [243, 4, 51, 0, 0, 0, 0, 0, 0]

            APP.ws._msg({ data: new Uint8Array(SERVER).buffer })
        },
        CAPTURE_FLAG: () => {
            const CLIENT = [243, 2, 23, 0, 1, 191, 105, 0, 3, 0, 0]

            APP.ws.send(new Uint8Array(CLIENT))
        },
        WATER: () => {
            const SERVER = [243, 4, 71, 0, 5, 245, 120, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 242, 147, 0, 1, 39, 58, ...BYTE32(APP.ME), 0, 0, 0, 44, 0, 0, 0, 0, 65, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 128, 0, 0, 63, 128, 0, 0, 63, 128, 0, 0, 63, 128, 0, 0, 0, 0, 0, 1, 10, 119, 97, 116, 101, 114, 67, 111, 108, 111, 114, 3, 0, 0, 0, 3, 61, 204, 204, 205, 62, 76, 204, 205, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 105, 0, 0, 0, 5, 100, 111, 0, 133, 98, 2, 254, 105, 0, 0, 0, 0]

            APP.ws._msg({ data: new Uint8Array(SERVER).buffer })
        }
    },
    CHAT: {
        MESSAGE: (CHAT, MESSAGE) => {
            var ENCODE = ENCODE(MESSAGE)

            const SERVER = [243, 4, 34, 0, 3, 87, 105, 0, 0, 0, CHAT, 88, 68, 0, 0, 0, 2, 98, 0, 105, 0, 0, 0, /**/ 1 /**/, 98, 5, 115, 0, ENCODE.length, ...ENCODE, 254, 105, 0, 0, 0, 0]
            const CLIENT = [243, 2, 28, 0, 2, 87, 105, 0, 0, 0, CHAT, 88, 68, 0, 0, 0, 2, 98, 0, 105, 0, 0, 0, /**/ 1 /**/, 98, 5, 115, 0, ENCODE.length, ...ENCODE]

            APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
            APP.ws.send(new Uint8Array(CLIENT))
        }
    },
    SET_ACTION: (ID, ACTION) => {
        const SERVER = [243, 4, 32, 0, 3, 22, 105, ...BYTE32(ID), 83, 68, 0, 0, 0, 1, 98, 0, 120, 0, 0, 0, 2, 1, ACTION, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 27, 0, 2, 22, 105, ...BYTE32(ID), 83, 68, 0, 0, 0, 1, 98, 0, 120, 0, 0, 0, 2, 1, ACTION]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer });
        APP.ws.send(new Uint8Array(CLIENT))

    },
    PUSH: (ID = 0, POWER) => {
        const SERVER = [243, 4, 32, 0, 3, 22, 105, ...BYTE32(ID), 83, 68, 0, 0, 0, 1, 98, 0, 120, 0, 0, 0, 14, 5, 2, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, 254, 105, 0, 0, 0, 0]
        const CLIENT = [243, 2, 27, 0, 2, 22, 105, ...BYTE32(ID), 83, 68, 0, 0, 0, 1, 98, 0, 120, 0, 0, 0, 14, 5, 2, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER, POWER]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer })
        APP.ws.send(new Uint8Array(CLIENT))
    },
    PLACE_CUBE: (CUBE_ID, X, Y, Z, MATERIAL) => {
        const SERVER = [243, 4, 10, 0, 3, 47, 105, ...BYTE32(CUBE_ID), 49, 120, 0, 0, 0, ...(MATERIAL ? [9, 2] : [7, 0]), ...BYTE16(X), ...BYTE16(Y), ...BYTE16(Z), ...(MATERIAL ? BYTE16(MATERIAL) : []), 254, 105, 0, 0, 0, MATERIAL ? 3 : 1]
        const CLIENT = [243, 2, 7, 0, 2, 47, 105, ...BYTE32(CUBE_ID), 49, 120, 0, 0, 0, ...(MATERIAL ? [9, 2] : [7, 0]), ...BYTE16(X), ...BYTE16(Y), ...BYTE16(Z), ...(MATERIAL ? BYTE16(MATERIAL) : [])]

        APP.ws._msg({ data: new Uint8Array(SERVER).buffer })
        APP.ws.send(new Uint8Array(CLIENT))
    }
};
